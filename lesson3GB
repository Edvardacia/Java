package ru.geekbrains.java1.lesson21;

/**
 * Created by QuantCapital on 04.10.2016.
 */
// ИГРА КРЕСТИКИ _ НОЛИКИ С ПОЛЕМ 5 на 5 и ИСКУССТВЕННЫМ ИНТЕЛЛЕКТОМ 

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main21 {

    static char[][] field = new char[5][5]; // создание игрового поля

    static final char playerDot = 'X'; // это ячейки поля
    static final char aiDot = 'O';
    static final char emptyDot = '*';

    public static void main(String[] args) {
        initField();
        printField();

        while (true) {
            playerTurn();
            printField();
            if (checkWin(playerDot)) {
                System.out.println("Победил человече");
                break;
            }
            if (isFieldFull()) {
                System.out.println("Ничья");
                break;
            }
            aiTurn();
            printField();
            if (checkWin(aiDot)) {System.out.println("Победил компьютер"); break; }
            if (isFieldFull()) {System.out.println("Ничья"); break; }
        }
    }

    public static boolean isFieldFull() {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (field[i][j] == '*') return false;
            }
        }
        return true;
    }


    public static void initField() { // инициализация поля
        for (int i = 0; i < 5; i++)
            for (int j = 0; j < 5; j++)
                field[i][j] = emptyDot;
    }

    public static void printField() {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                System.out.print(field[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    public static void setXO(int _x, int _y, char _xo) { //установка фишек
        field[_y][_x] = _xo;
    }


    public static boolean isCellEmpty(int _x, int _y) { // проверка ячеек
        if (_x < 0 || _y < 0 || _x > 4 || _y > 4) return false;
        if (field[_y][_x] == '*') return true;
        return false;
    }

    static Scanner sc = new Scanner(System.in); //ход человека
    public static void playerTurn() {
        int x, y;
        do {
            System.out.println("Введите координаты в формате X Y (1-3)");
            x = sc.nextInt();
            y = sc.nextInt();
        } while (!isCellEmpty(x - 1,y - 1));
        setXO(x - 1, y - 1, playerDot);
    }

    static Random rand = new Random(); //ход компьютера
    public static void aiTurn() {
        int x,y;
        if (field[0][0] == 'X' && field[0][1] == 'X' && field[0][2] == 'X') field[0][3] = 'O';
        else if (field[1][0] == 'X' && field[1][1] == 'X' && field[1][2] == 'X') field[1][3] = 'O';
        else if (field[3][1] == 'X' && field[3][2] == 'X' && field[3][3] == 'X') field[3][4] = 'O';
        else if (field[0][0] == 'X' && field[1][0] == 'X' && field[2][0] == 'X') field[3][0] = 'O';
        else if (field[1][2] == 'X' && field[2][2] == 'X' && field[3][2] == 'X') field[4][2] = 'O';
        else if (field[0][0] == 'X' && field[1][1] == 'X' && field[2][2] == 'X') field[3][3] = 'O';
        else if (field[1][3] == 'X' && field[2][2] == 'X' && field[3][1] == 'X') field[4][0] = 'O';

        else { do {
                x = rand.nextInt(5);
                y = rand.nextInt(5);
            } while (!isCellEmpty(x,y));
        setXO(x, y, aiDot);
    }}

    public static boolean checkWin(char _xo) { // проверка победы
        // Проверка всех горизонталей
        if (field[0][0] == _xo && field[0][1] == _xo && field[0][2] == _xo && field[0][3] == _xo) return true;
        if (field[0][1] == _xo && field[0][2] == _xo && field[0][3] == _xo && field[0][4] == _xo) return true;

        if (field[1][0] == _xo && field[1][1] == _xo && field[1][2] == _xo && field[1][3] == _xo) return true;
        if (field[1][1] == _xo && field[1][2] == _xo && field[1][3] == _xo && field[1][4] == _xo) return true;

        if (field[2][0] == _xo && field[2][1] == _xo && field[2][2] == _xo && field[2][3] == _xo) return true;
        if (field[2][1] == _xo && field[2][2] == _xo && field[2][3] == _xo && field[2][4] == _xo) return true;

        if (field[3][0] == _xo && field[3][1] == _xo && field[3][2] == _xo && field[3][3] == _xo) return true;
        if (field[3][1] == _xo && field[3][2] == _xo && field[3][3] == _xo && field[3][4] == _xo) return true;

        if (field[4][0] == _xo && field[4][1] == _xo && field[4][2] == _xo && field[4][3] == _xo) return true;
        if (field[4][1] == _xo && field[4][2] == _xo && field[4][3] == _xo && field[4][4] == _xo) return true;

        // Проверка всех вертикалей
        if (field[0][0] == _xo && field[1][0] == _xo && field[2][0] == _xo && field[3][0] == _xo) return true;
        if (field[1][0] == _xo && field[2][0] == _xo && field[3][0] == _xo && field[4][0] == _xo) return true;

        if (field[0][1] == _xo && field[1][1] == _xo && field[2][1] == _xo && field[3][1] == _xo) return true;
        if (field[1][1] == _xo && field[2][1] == _xo && field[3][1] == _xo && field[4][1] == _xo) return true;

        if (field[0][2] == _xo && field[1][2] == _xo && field[2][2] == _xo && field[3][2] == _xo) return true;
        if (field[1][2] == _xo && field[2][2] == _xo && field[3][2] == _xo && field[4][2] == _xo) return true;

        if (field[0][3] == _xo && field[1][3] == _xo && field[2][3] == _xo && field[3][3] == _xo) return true;
        if (field[1][3] == _xo && field[2][3] == _xo && field[3][3] == _xo && field[4][3] == _xo) return true;

        if (field[0][4] == _xo && field[1][4] == _xo && field[2][4] == _xo && field[3][4] == _xo) return true;
        if (field[1][4] == _xo && field[2][4] == _xo && field[3][4] == _xo && field[4][4] == _xo) return true;


        // Проверка двух диагоналей
        if (field[0][0] == _xo && field[1][1] == _xo && field[2][2] == _xo && field[3][3] == _xo) return true;
        if (field[1][1] == _xo && field[2][2] == _xo && field[3][3] == _xo && field[4][4] == _xo) return true;
        if (field[0][1] == _xo && field[1][2] == _xo && field[2][3] == _xo && field[3][4] == _xo) return true;
        if (field[1][0] == _xo && field[2][1] == _xo && field[3][2] == _xo && field[4][3] == _xo) return true;

        if (field[2][1] == _xo && field[1][2] == _xo && field[0][3] == _xo && field[3][0] == _xo) return true;
        if (field[0][4] == _xo && field[1][3] == _xo && field[2][2] == _xo && field[3][1] == _xo) return true;
        if (field[1][4] == _xo && field[2][3] == _xo && field[3][2] == _xo && field[4][1] == _xo) return true;
        if (field[1][3] == _xo && field[2][2] == _xo && field[3][1] == _xo && field[4][0] == _xo) return true;




        return false;
    }
}

